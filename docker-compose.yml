services:

  api:
    build:
      context: ./${API_DIRECTORY}
      dockerfile: ../docker/api/Dockerfile
    container_name: ${PROJECT_NAME}-api
    volumes:
      - ${API_DIRECTORY}:/var/www/project/api
    networks:
      - ${PROJECT_NAME}

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: ${PROJECT_NAME}-frontend
    command: npm run dev
    volumes:
      - /var/www/project/frontend/node_modules
      - ${FRONTEND_DIRECTORY}:/var/www/project/frontend
    networks:
      - ${PROJECT_NAME}

  mysql:
    image: mysql:8.0.20
    container_name: ${PROJECT_NAME}-mysql
    restart: unless-stopped
    volumes: 
      - mysql:/var/lib/mysql 
    ports: 
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - ${PROJECT_NAME}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${PROJECT_NAME}-phpmyadmin
    restart: unless-stopped
    ports:
      - 8080:80
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306

    networks:
      - ${PROJECT_NAME}


  nginx:
    build: ./docker/nginx
    container_name: ${PROJECT_NAME}-nginx
    ports:
      - "80:80"
      - "443:443"
      - "8443:8443"
    volumes:
      - ${API_DIRECTORY}:/var/www/project/api
      - ${FRONTEND_DIRECTORY}:/var/www/project/frontend
      - ./docker/certs/local:/etc/nginx/certs
    networks:
      - ${PROJECT_NAME}
    environment:
      NODE_ENV: dev
      NGINX_HOST: ${NGINX_HOST_LOCAL}
      NGINX_PORT: ${NGINX_PORT_LOCAL}
      NGINX_CERT_CRT: ${NGINX_CERT_CRT_LOCAL}
      NGINX_CERT_KEY: ${NGINX_CERT_KEY_LOCAL}

networks:
  project:

volumes:
  mysql: